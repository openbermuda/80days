<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Around the world in 80 days (mclock2)</title><link>http://openbermuda.github.io/80days/</link><description></description><atom:link rel="self" type="application/rss+xml" href="http://openbermuda.github.io/80days/categories/mclock2.xml"></atom:link><language>en</language><lastBuildDate>Wed, 20 Jan 2016 03:40:16 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Guido's clock and the Raspberry Pi Sense Hat</title><link>http://openbermuda.github.io/80days/posts/guidos-clock-and-the-raspberry-pi-sense-hat.html</link><dc:creator>Johnny Gill</dc:creator><description>&lt;div&gt;&lt;p&gt;Many years ago I was working a simple app to run on a Nokia Series 60
phone.&lt;/p&gt;
&lt;p&gt;It was actually before phone apps were really a thing, or even called
apps.  Nokia had ported python to the Series 60 phones and had some
simple libraries you could use to build your Nokia apps.&lt;/p&gt;
&lt;p&gt;I created one called &lt;a class="reference external" href="http://anorak.sourceforge.net/"&gt;anorak&lt;/a&gt;.  Around the same time Guido Van Rossum
posted some code to a thing he called &lt;a class="reference external" href="https://www.python.org/~guido/mclock2.py"&gt;mclock2&lt;/a&gt;.  Growing up his
family had a clock which had three coloured discs and a bright light
behind them.  The disks rotate through the day giving pretty patterns
on the clock.  The clock was designed by Rob Juda.&lt;/p&gt;
&lt;p&gt;Here is a screenshot from Guido's code.&lt;/p&gt;
&lt;img alt="../galleries/Fishnet/guido.png" src="http://openbermuda.github.io/80days/galleries/Fishnet/guido.png"&gt;
&lt;p&gt;Guido created a Tkinter application to simulate the clock.  I liked
the clock, so ported it to Series 60 and used it as the default screen
for &lt;em&gt;anorak&lt;/em&gt; which was a sort of poorman's GPS using cell tower
locations to figure out where I was.&lt;/p&gt;
&lt;p&gt;Fast-forward to today and there is the Raspberry Pi and the Sense Hat.&lt;/p&gt;
&lt;p&gt;The latter is on the International Space Station.  It plugs into the
pins on a pi and has:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Gyroscope&lt;/li&gt;
&lt;li&gt;Accelerometer&lt;/li&gt;
&lt;li&gt;Magnetometer&lt;/li&gt;
&lt;li&gt;Temperature&lt;/li&gt;
&lt;li&gt;Humidity&lt;/li&gt;
&lt;li&gt;Barometric pressure&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In addition it has an 8x8 coloured LED array.&lt;/p&gt;
&lt;p&gt;I am working on hooking all this up to my moped and wanted to learn
about to use the &lt;a class="reference external" href="https://github.com/RPi-Distro/python-sense-hat"&gt;sense hat python interface&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The interface is simple to use, just import the library and create a
SenseHat object and then you can talk to the device.&lt;/p&gt;
&lt;p&gt;I could not find a drawing library to draw directly onto the 8*8 pixel
grid.  Instead I used PIL and ImageDraw.Draw.&lt;/p&gt;
&lt;p&gt;This allowed me to create a 64x64 image with PIL, with very few
changes to the code.  I just needed the ImageDraw.Draw().pieslice
method.&lt;/p&gt;
&lt;p&gt;Now to get down to 8*8 I just divided the image into an 8*8 grid with
8*8 pixels in each grid point.&lt;/p&gt;
&lt;p&gt;I then just take the average pixel value and use hat.set_pixel() to
set that value.&lt;/p&gt;
&lt;p&gt;The hands of the clock did not work too well.  In the end I made the
hour hand all black with a 10 pixel wide line.  The minute hand I did
in white, again 10 pixels wide.&lt;/p&gt;
&lt;p&gt;Here is a photo of the end result.&lt;/p&gt;
&lt;img alt="../galleries/Fishnet/sense_hat_mclock.jpg" src="http://openbermuda.github.io/80days/galleries/Fishnet/sense_hat_mclock.jpg"&gt;
&lt;p&gt;So, not quite as neat as the Tkinter version, but I have found I can
actually figure out the time from this thing.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;UPDATE:&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I thought I might be able to do add new method to create pixels.  I am
creating a 64 * 64 image using the Python Imaging Library tools.&lt;/p&gt;
&lt;p&gt;This one uses a weighted average based on Euclidean distance from the
center of the 8 * * area being averaged.  The resulting clock is
looking prettier now.&lt;/p&gt;
&lt;p&gt;Currently the hands are being drawn as 12 pixels wide lines, with a
black hour hand and a red minute hand.&lt;/p&gt;
&lt;p&gt;Depending on what is going on with the coloured disks the time is
usually quite easily readable.  Sometimes you have to wait a few
seconds if there is a lot of red or dark colour on the clock, before
you can find the hands.&lt;/p&gt;
&lt;p&gt;It is a fun little clock when you only need approximate time.&lt;/p&gt;
&lt;div class="section" id="sensors"&gt;
&lt;h2&gt;Sensors&lt;/h2&gt;
&lt;p&gt;I have been playing with these a little.  I have a simple monitor
function that can be used to send data from the sensors to the pixel
display.&lt;/p&gt;
&lt;p&gt;The temperature sensor is a little too close to the pi's processor, so
it is affected by the heat from the processor.  &lt;a class="reference external" href="https://www.raspberrypi.org/forums/viewtopic.php?f=104&amp;amp;t=111457"&gt;This topic&lt;/a&gt; on the
raspberry pi forum had some helpful suggestions.&lt;/p&gt;
&lt;p&gt;There are two temperature sensors on the board. One with the humidity
sensor and one with the pressure sensor.  They are different distances
from the pi processor.&lt;/p&gt;
&lt;p&gt;The incantation below can be used to get the CPU temperature.:&lt;/p&gt;
&lt;pre class="literal-block"&gt;
vcgencmd measure_temp
&lt;/pre&gt;
&lt;p&gt;With these three numbers it should be possible to find a reasonable
formula to get a good approximation of the real temperature.  To do
this I will just have to collect some data to fit a model to.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="joy-stick"&gt;
&lt;h2&gt;Joy Stick&lt;/h2&gt;
&lt;p&gt;I am yet to experiment with this.  I suspect it will be fairly easy to
set something up so I can use it to switch between different displays.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="storing-readings"&gt;
&lt;h2&gt;Storing Readings&lt;/h2&gt;
&lt;p&gt;This is also on the list.  Once I have this working I'll be able to
collect data as I am driving around Bermuda.  This will include data
from the accelerometer and the compass.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="raspberry-pi-forum"&gt;
&lt;h2&gt;Raspberry Pi Forum&lt;/h2&gt;
&lt;p&gt;There is a &lt;a class="reference external" href="https://www.raspberrypi.org/forums/index.php"&gt;raspberry pi forum index&lt;/a&gt; which has some forums for a
wide range of subjects, including the AstroPy, the other name for the
Sense Hat.&lt;/p&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>mclock2</category><category>python</category><category>raspberry pi</category><category>sense hat</category><guid>http://openbermuda.github.io/80days/posts/guidos-clock-and-the-raspberry-pi-sense-hat.html</guid><pubDate>Fri, 08 Jan 2016 19:17:42 GMT</pubDate></item></channel></rss>